# =========================
# Project
# =====
[project]
name = "service_1"
version = "0.0.0"
requires-python = ">=3.12,<3.13"
dependencies = [
    "supervisor==4.2.5",
    "django==5.2",
    "django-ninja==1.4.0",
    "gunicorn==23.0.0",
    "requests==2.32.3",
    "grpcio==1.71.0",
    "grpcio-tools==1.71.0",
    "mypy-protobuf==3.6.0",
    "kafka-python==2.1.4",
    "opentelemetry-sdk==1.31.1",
    "opentelemetry-exporter-otlp==1.31.1",
    "opentelemetry-instrumentation-logging==0.52b1",
    "opentelemetry-instrumentation-django==0.52b1",
    "opentelemetry-instrumentation-grpc==0.52b1",
    "opentelemetry-instrumentation-requests==0.52b1",
    "opentelemetry-instrumentation-sqlite3==0.52b1",
    "opentelemetry-instrumentation-kafka-python==0.52b1",
]

[dependency-groups]
dev = [
    "fixmate",
    "mypy>=1.15.0,<2",
    "pre-commit>=4.2.0,<5",
    "ruff>=0.11.4,<0.12",
    "types-requests>=2.32.0.20250328,<3",
]

# =========================
# UV
# =====
[tool.uv]
package = false

[tool.uv.sources]
fixmate = { git = "https://github.com/ahmadiehsan/fixmate.git", rev = "1.1.0" }

# =========================
# Ruff
# =====
[tool.ruff]
target-version = "py312"
line-length = 120
fix = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D104",    # undocumented-public-package
    "D100",    # undocumented-public-module
    "D101",    # undocumented-public-class
    "D106",    # undocumented-public-nested-class
    "D107",    # undocumented-public-init
    "D102",    # undocumented-public-method
    "D105",    # undocumented-magic-method
    "D103",    # undocumented-public-function
    "D203",    # one-blank-line-before-class (conflict with D211)
    "D213",    # multi-line-summary-second-line (conflict with D212)
    "ANN401",  # any-type
    "FIX002",  # line-contains-todo
    "TD003",   # missing-todo-link
    "TRY003",  # raise-vanilla-args
    "TRY400",  # error-instead-of-exception
    "TC001",   # typing-only-first-party-import
    "T201",    # print
    "S603",    # subprocess-without-shell-equals-true
    "S311",    # suspicious-non-cryptographic-random-usage
    "PLR2004", # magic-value-comparison
    "COM812",  # missing-trailing-comma (Suggested by ruff to disable)
    "ISC001",  # single-line-implicit-string-concatenation (Suggested by ruff to disable)
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false
combine-as-imports = true

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.format]
skip-magic-trailing-comma = true

# =========================
# MyPy
# =====
[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
warn_unused_ignores = true
warn_unreachable = true
warn_redundant_casts = true
strict_equality = true
strict_concatenate = true
implicit_reexport = false

# =========================
# Pylint
# =====
[tool.pylint.main]
py-version = "3.12"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.design]
min-public-methods = 1

[tool.pylint."messages control"]
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "import-error",
    "duplicate-code",
    "too-few-public-methods",
    "too-many-instance-attributes",
    "too-many-locals",
    "method-hidden",
    "fixme",                        # Ruff will handle it
    "broad-exception-raised",       # Ruff will handle it
    "line-too-long",                # Ruff will handle it
    "unused-argument",              # Ruff will handle it
    "too-many-arguments",           # Ruff will handle it
    "too-many-branches",            # Ruff will handle it
    "too-many-statements",          # Ruff will handle it
    "bare-except",                  # Ruff will handle it
    "invalid-name",                 # Ruff will handle it
    "no-member",                    # MyPy will handle it
]

# =========================
# Python Checker
# =====
[tool.python_checker.per-file-ignores]
"*helpers/*" = ["func_validator"]
"*helpers/otel.py" = ["import_validator"]
"*api/views.py" = ["func_validator"]
"*api/compiled_protos/*" = ["all"]
